* C1 Birds

*Dependencies:
*  C1Birds.c16
*  C1B1.wav
*  C1B2.wav
*  C1B3.wav

inst
lock

doif game "C1_to_DS_Loaded" = 1

* Flying Birds
	reps 6
		new: simp 2 15 32335 "c1birds" 11 0 7001
		attr 199
		accg 0
		aero 10
		fric 100
*		bhvr 0
		bhvr 49
		elas 100
		perm 40
		tick 20
		aero 0
		anim [0 1 2 3 2 1 255]
		setv va99 1
		setv va00 4734
		setv va01 10680
		addv va01 rand -100 100
		addv va00 rand -200 200
		mvsf va00 va01
		velo rand -6 6 rand -6 6
	repe

* Hummingbirds
	reps 3
		new: simp 2 15 32336 "c1birds" 11 0 7001
		attr 199
		accg 0
		aero 10
		fric 0
		bhvr 0
		elas 100
		perm 1
		tick 10
		anim [4 5 6 5 255]
		setv va99 1
		setv ov00 4130
		setv ov01 10300
		setv ov02 4520
		setv ov03 10530
		setv ov04 ov00
		subv ov04 10
		setv ov05 ov01
		subv ov05 10
		setv ov06 ov02
		addv ov06 10
		setv ov07 ov03
		addv ov07 10
		setv ov20 ov02
		subv ov20 ov00
		divv ov20 2
		addv ov20 ov00
		setv ov21 ov03
		subv ov21 ov01
		divv ov21 2
		addv ov21 ov01
		subv ov20 20
		subv ov21 18
		mvsf ov20 ov21
		velo rand -2 2 rand -2 2
	repe

* Nesting Bird
	new: simp 2 15 32337 "c1birds" 11 0 7001
	attr 199
	accg 0
	aero 10
	fric 100
	bhvr 0
	elas 10
	perm 1
	tick 5
	pose 7
	setv va99 1
	setv ov00 5797
	setv ov01 10576
	setv ov02 5861
	setv ov03 10632

	setv ov04 5787
	setv ov05 10566
	setv ov06 5871
	setv ov07 10642

	setv ov20 ov02
	subv ov20 ov00
	divv ov20 2
	addv ov20 ov00
	setv ov21 ov03
	subv ov21 ov01
	divv ov21 2
	addv ov21 ov01
	subv ov20 20
	subv ov21 18
	mvsf ov20 ov21
endi

*******************************
* Scripts

scrp 2 15 32335 1
	stpc
	sndc "c1b1"
	stim writ from 86 1.0
endm

scrp 2 15 32336 1
	stpc
	sndc "c1b2"
	stim writ from 86 1.0
endm

scrp 2 15 32337 1
	stpc
	sndc "c1b3"
	stim writ from 86 1.0
endm

scrp 2 15 32335 4
*	flying bird picked up
	inst
	accg 0
	doif velx > 0
		mira 0
	elif velx < 0
		mira 1
	endi
	doif pose <> 7
		pose 7
	endi
endm

scrp 2 15 32335 5
*	flying bird dropped
	inst
	doif velx > 0
		mira 0
	elif velx < 0
		mira 1
	endi
	doif movs = 0 and pose = 7
		anim [0 1 2 3 2 1 255]
	endi
endm

scrp 2 15 32335 6
*	flying bird collides
	inst
	doif velx > 0
		mira 0
	elif velx < 0
		mira 1
	endi
	doif wall = down
		accg 2
		elas 0
		pose 8
		tick 0
		wait rand 20 40
		inst
		tick 20
		mesg writ ownr 9
	endi
	doif wall = _up_
		setv va01 vely
		mulv vely -1
		velo velx va01
		mesg writ ownr 9
	endi
endm

scrp 2 15 32335 9
*	Flying birds timer
	inst
	lock
	setv va12 rand 1 100
	doif va12 > 97
		sndc "c1b1"
	endi
	doif pose >= 8
*		bird is resting
		setv va20 rand 0 8
		doif va20 = 0
*			look the same
		elif va20 = 1
*			peck at something once
			anim [8 9 8]
		elif va20 = 2
*			flutter wings
			anim [10 8 8 10 8 8 8 10 8 10 8]
		elif va20 = 3
*			peck a bit more
			anim [8 9 8 8 8 8 8 9 8]
		elif va20 = 4
*			turn around
			doif mira = 0
				mira 1
			else
				mira 0
			endi
		elif va20 = 5
*			hop
			anim [10 10 10 10 8]
			setv va21 rand 0 1
			doif va21 = 0
				velo rand -6 -4 rand -6 -4
			else
				velo rand 4 6 rand -6 -4
			endi
		elif va20 > 5
*			fly away
			accg 0
			elas 100
			anim [0 1 2 3 2 1 255]
			mesg writ ownr 9
		endi
	elif movs = 0 and pose < 8
		doif rtyp grap posl posb = -1 or rtyp grap posl posb = 8 or rtyp grap posl posb = 9
			velo 6 -6
		elif rtyp grap posr posb = -1 or rtyp grap posr posb = 8 or rtyp grap posr posb = 9
			velo -6 -6
		elif rtyp grap posl post = -1 or rtyp grap posl post = 8 or rtyp grap posl post = 9
			velo 6 6
		elif rtyp grap posr post = -1 or rtyp grap posr post = 8 or rtyp grap posr post = 9
			velo -6 -6
		endi
		setv va20 rtyp grap posl post
		doif va20 <> 8 and va20 <> 9 and va20 <> -1
			doif accg < 0
				accg 0
				elas 100
				velo 0 0
			endi
			setv va00 velx
			setv va01 vely

*			Slightly modify velocity to appear more random			
			doif rand 1 100 > 50
				addv va00 rand -2 2
				addv va01 rand -2 2
				velo va00 va01
			endi

*			Speed damping
			doif velx > 6 or velx < -6 or vely > 6 or vely < -6
				setv va00 velx
				setv va01 vely
				mulv va00 .75
				mulv va01 .75
				velo va00 va01
			endi

			doif velx > -2 and velx < 2 and vely > -2 and vely < 2 and movs = 0
*				not moving much - move more!
				setv ov10 rand 0 1
				doif ov10 = 0
					setv ov10 rand -6 -4
				else
					setv ov10 rand 4 6
				endi
				setv ov11 rand 0 1
				doif ov11 = 0
					setv ov11 rand -3 1
				else
					setv ov11 rand 1 3
				endi
				velo ov10 ov11
			endi

		else
*			in water - let's get out of it!
			setv ov10 rand -6 6
			setv ov11 rand -6 6
			divv ov11 2
			velo ov10 ov11
			accg -6
			elas 0
			wait 10
			elas 100
			accg 0
			setv ov10 rand -6 6
			setv ov11 rand -6 6
			divv ov11 2
			velo ov10 ov11
		endi
	endi
	slow
	unlk
	doif velx > 0
		mira 0
	elif velx < 0
		mira 1
	endi
endm

scrp 2 15 32335 12
*	Flying birds eaten
	snde "chwp"
	stim writ from 80 1.0
endm

scrp 2 15 32336 9
*	Hummingbird timer
	inst
	lock
	setv va12 rand 1 100
	doif va12 > 97
		sndc "c1b2"
	endi
	doif movs = 0

		setv va60 rand 1 100
		doif va60 > 80
			setv va61 rand -6 6
			divv va61 2
			setv va62 rand -6 6
			divv va62 2
			velo va61 va62
		endi
		doif velx > 0
			mira 0
		elif velx < 0
			mira 1
		endi

		doif posl < ov00 or posr > ov02 or post < ov01 or posb > ov03
			doif velx > 0
				mira 0
			elif velx < 0
				mira 1
			endi
			doif rtyp grap posl posb = -1 or rtyp grap posl posb = 8 or rtyp grap posl posb = 9
				velo 6 -6
			elif rtyp grap posr posb = -1 or rtyp grap posr posb = 8 or rtyp grap posr posb = 9
				velo -6 -6
			elif rtyp grap posl post = -1 or rtyp grap posl post = 8 or rtyp grap posl post = 9
				velo 6 6
			elif rtyp grap posr post = -1 or rtyp grap posr post = 8 or rtyp grap posr post = 9
				velo -6 -6
			endi
			setv va20 rtyp grap posl post
			doif va20 <> 8 and va20 <> 9 and va20 <> -1
				doif accg < 0
					accg 0
					aero 10
					elas 100
					velo 0 0
				endi
				doif posl < ov04 and posr < ov06
					setv ov10 6
				elif posl < ov00 and posr < ov02
*					mvsf ov20 post
					setv ov10 6
					divv ov10 2
				elif posl >= ov00 and posr <= ov02
					setv ov10 0
				endi
				doif posl > ov04 and posr > ov06
					setv ov10 -6
				elif posl > ov00 and posr > ov02
*					mvsf ov20 post
					setv ov10 -6
					divv ov10 2
				elif posl >= ov00 and posr <= ov02
					setv ov10 0
				endi
				doif post < ov05 and posb < ov07
					setv ov11 6
				elif post < ov01 and posb < ov03
*					mvsf posl ov21
					setv ov11 6
					divv ov11 2
				elif post >= ov01 and posb <= ov03
					setv ov11 0
				endi
				doif post > ov05 and posb > ov07
					setv ov11 -6
				elif post > ov01 and posb > ov03
*					mvsf posl ov21
					setv ov11 -6
					divv ov11 2
				elif post >= ov01 and posb <= ov03
					setv ov11 0
				endi
				velo ov10 ov11
			else
				setv ov10 rand -6 6
				setv ov11 rand -6 6
				velo ov10 ov11
				accg -6
				aero 0
				elas 0
			endi
		endi
	endi
	slow
	unlk
	doif movs = 0
		doif velx <> 0 or vely <> 0 and pose = 7
			anim [4 5 6 5 255]
		endi
	elif movs = 4 or movs = 3 and pose <> 7
		pose 7
	elif pose <> 7
		pose 7
	endi
endm

scrp 2 15 32336 12
*	hummingbirds eaten
	snde "chwp"
	stim writ from 80 1.0
endm

scrp 2 15 32337 9
*	Nesting bird timer
	inst
	lock
	setv va12 rand 1 100
	doif va12 > 95
		sndc "c1b3"
	endi
	doif movs = 0
		doif posl < ov00 or posr > ov02 or post < ov01 or posb > ov03
			doif velx > 0
				mira 0
			elif velx < 0
				mira 1
			endi
			doif rtyp grap posl posb = -1 or rtyp grap posl posb = 8 or rtyp grap posl posb = 9
				velo 6 -6
			elif rtyp grap posr posb = -1 or rtyp grap posr posb = 8 or rtyp grap posr posb = 9
				velo -6 -6
			elif rtyp grap posl post = -1 or rtyp grap posl post = 8 or rtyp grap posl post = 9
				velo 6 6
			elif rtyp grap posr post = -1 or rtyp grap posr post = 8 or rtyp grap posr post = 9
				velo -6 -6
			endi
			setv va20 rtyp grap posl post
			doif va20 <> 8 and va20 <> 9 and va20 <> -1
				doif accg < 0
					accg 0
					aero 10
					elas 100
					velo 0 0
				endi
				doif posl < ov04 and posr < ov06
					setv ov10 6
				elif posl < ov00 and posr < ov02
					mvsf ov20 post
					setv ov10 6
					divv ov10 2
				elif posl >= ov00 and posr <= ov02
					setv ov10 0
				endi
				doif posl > ov04 and posr > ov06
					setv ov10 -6
				elif posl > ov00 and posr > ov02
					mvsf ov20 post
					setv ov10 -6
					divv ov10 2
				elif posl >= ov00 and posr <= ov02
					setv ov10 0
				endi
				doif post < ov05 and posb < ov07
					setv ov11 6
				elif post < ov01 and posb < ov03
					mvsf posl ov21
					setv ov11 6
					divv ov11 2
				elif post >= ov01 and posb <= ov03
					setv ov11 0
				endi
				doif post > ov05 and posb > ov07
					setv ov11 -6
				elif post > ov01 and posb > ov03
					mvsf posl ov21
					setv ov11 -6
					divv ov11 2
				elif post >= ov01 and posb <= ov03
					setv ov11 0
				endi
				velo ov10 ov11
			else
				setv ov10 rand -6 6
				setv ov11 rand -6 6
				velo ov10 ov11
				accg -6
				aero 0
				elas 0
			endi
		else
			setv va00 ov02
			subv va00 ov00
			divv va00 2
			addv va00 ov00
			setv va01 ov03
			subv va01 ov01
			divv va01 2
			addv va01 ov01
			subv va00 20
			subv va01 18
			mvsf va00 va01
			accg 0
		endi
	endi
	slow
	unlk

	doif posl < ov00 or posr > ov02 or post < ov01 or posb > ov03 and movs = 0
		doif pose = 7
			anim [0 1 2 3 2 1 255]
		endi
	elif movs = 4 or movs = 3 and pose <> 7
		pose 7
	elif pose <> 7
		pose 7
	endi
endm

scrp 2 15 32337 12
*	nesting bird eaten
	snde "chwp"
	stim writ from 80 1.0
endm


rscr
enum 2 15 32335
	kill targ
next
enum 2 15 32336
	kill targ
next
enum 2 15 32337
	kill targ
next
scrx 2 15 32335 9
scrx 2 15 32335 12
scrx 2 15 32335 4
scrx 2 15 32335 5
scrx 2 15 32335 6
scrx 2 15 32336 9
scrx 2 15 32336 12
scrx 2 15 32337 9
scrx 2 15 32337 12